<?xml version="1.0"?>
<doc>
    <assembly>
        <name>itolib</name>
    </assembly>
    <members>
        <member name="T:itolib.Behaviours.Animations.AnimationParamSetter">
            <summary>
            	TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationParamSetter.animator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationParamSetter.defaultParameterName">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationParamSetter.targetedParamID">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SwitchParam(System.String)">
            <summary>
                TODO.
            </summary>
            <param name="paramName"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SwitchParamServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="paramID"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SwitchParamClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="paramID"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SwitchParamLocal(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="paramID"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetBool(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetBoolServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetBoolClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetBoolLocal(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetFloat(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetFloatServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetFloatClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetFloatLocal(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetInt(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetIntServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetIntClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetIntLocal(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetTrigger(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="reset"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetTriggerServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="reset"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetTriggerClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="reset"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationParamSetter.SetTriggerLocal(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="reset"></param>
        </member>
        <member name="T:itolib.Behaviours.Animations.AnimationVelocity">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Animations.AnimationVelocity.Random">
            <summary>
                Seeded Random instance initialized with the current map seed.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Animations.AnimationVelocity.InitialSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.animator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.initialState">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.speedParameter">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.minStartingSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.maxStartingSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.stoppingSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.activationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.transitionTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.targetReached">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.previousTarget">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.AnimationVelocity.currentTarget">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.OnNetworkSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.FixedUpdate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.ResetSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.ResetSpeedLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.ChangeSpeed(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="targetSpeed"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.ChangeSpeedServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="targetSpeed"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.ChangeSpeedClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="targetSpeed"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.ChangeSpeedLocal(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="targetSpeed"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.RerollSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.SyncSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.SyncSpeed(System.Single)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.SyncSpeedServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Single)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.SyncSpeedClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="initialSpeed"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.AnimationVelocity.SyncSpeedLocal(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="initialSpeed"></param>
        </member>
        <member name="T:itolib.Behaviours.Animations.EventEntry">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.EventEntry.eventName">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.EventEntry.onEventCalled">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.EventEntry.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Animations.MultiAnimationEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Animations.MultiAnimationEvent.eventEntries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Animations.MultiAnimationEvent.CallEvent(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="eventIndex"></param>
        </member>
        <member name="M:itolib.Behaviours.Animations.MultiAnimationEvent.CallEvent(System.String)">
            <summary>
                TODO.
            </summary>
            <param name="eventName"></param>
        </member>
        <member name="T:itolib.Behaviours.Conditionals.ConditionalOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.ConditionalOverride.nameToSearch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.ConditionalOverride.alsoAppliesTo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.ConditionalOverride.objectsToEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.ConditionalOverride.objectsToDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.ConditionalOverride.onConditionalApply">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.ConditionalOverride.onConditionalUndo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.ConditionalOverride.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.ConditionalOverride.Apply(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="undo"></param>
        </member>
        <member name="T:itolib.Behaviours.Conditionals.BaseConditional`1">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.BaseConditional`1.conditionalOverrides">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Conditionals.BaseConditional`1.activationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.ApplyConditional">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.ApplyConditional(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="undo"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.ApplyConditional(`0)">
            <summary>
                TODO.
            </summary>
            <param name="objectToCheck"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.ApplyConditional(`0,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="objectToCheck"></param>
            <param name="undo"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.BaseConditional`1.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                <c>DunGen</c> listener called when generation finishes, but before blockers and connectors are placed.
            </summary>
            <param name="dungeon">Dungeon that just finished generating.</param>
        </member>
        <member name="T:itolib.Behaviours.Conditionals.DungeonConditional">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.DungeonConditional.ApplyConditional(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="undo"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.DungeonConditional.ApplyConditional(DunGen.Graph.DungeonFlow,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="objectToCheck"></param>
            <param name="undo"></param>
        </member>
        <member name="T:itolib.Behaviours.Conditionals.MoonConditional">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.MoonConditional.ApplyConditional(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="undo"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.MoonConditional.ApplyConditional(SelectableLevel,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="objectToCheck"></param>
            <param name="undo"></param>
        </member>
        <member name="T:itolib.Behaviours.Conditionals.WeatherConditional">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Conditionals.WeatherConditional.IsProgressive">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Conditionals.WeatherConditional.CurrentWeather">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.WeatherConditional.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.WeatherConditional.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.WeatherConditional.ApplyConditional(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="undo"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.WeatherConditional.ApplyConditional(LevelWeatherType,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="objectToCheck"></param>
            <param name="undo"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.WeatherConditional.ApplyConditional(LevelWeatherType,LevelWeatherType)">
            <summary>
                TODO.
            </summary>
            <param name="previousWeather"></param>
            <param name="incomingWeather"></param>
        </member>
        <member name="M:itolib.Behaviours.Conditionals.WeatherConditional.ApplyConditional(LevelWeatherType[])">
            <summary>
                TODO.
            </summary>
            <param name="weatherTypes"></param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.DetectRegion`1">
            <summary>
                Represents an abstract region within which to detect or perform a search for <c>Collider</c> objects with an attached <c>Behaviour</c> of type
                <typeparamref name="T"/>, which are then fed to various event callbacks.
            </summary>
            <remarks><b>NOTE:</b> Region needs to be either a <c>BoxCollider</c>, <c>SphereCollider</c>, or <c>CapsuleCollider</c> to perform searches.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.regionCollider">
            <summary>
                <c>Collider</c> whose bounds are to be used when searching for overlapping objects.
            </summary>
            <remarks><b>NOTE:</b> Region needs to be either a <c>BoxCollider</c>, <c>SphereCollider</c>, or <c>CapsuleCollider</c> to perform searches.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.activationTime">
            <summary>
                Activation time for the region's automatic object search.
            </summary>
            <remarks><b>NOTE:</b> Can be set to <c>Manual</c> to disable the automatic search, but is not required for triggering manual searches afterwards.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.maxObjects">
            <summary>
                Maximum number of <c>Collider</c> instances expected to be found per search by this <c>DetectRegion</c>, for memory allocation purposes. Can be set
                to 0 to disable object searching.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.onRegionChecked">
            <summary>
                Callback invoked after a search is performed, with the total number of overlapping <c>Collider</c> instances found given as a parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.onRegionEntered">
            <summary>
                Callback invoked when an object of type <typeparamref name="T"/> enters the region, with the object itself given as a parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.onRegionExited">
            <summary>
                Callback invoked when an object of type <typeparamref name="T"/> exits the region, with the object itself given as a parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.onObjectsEach">
            <summary>
                Callback invoked sequentially on every object of type <typeparamref name="T"/> found within the region after a search is performed, with
                each object given as a parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.onObjectsAny">
            <summary>
                Callback invoked after a search is performed, only if at least one object of type <typeparamref name="T"/> is found within the region, with
                the total number of overlapping objects given as a parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.layerMask">
            <summary>
                Layers within which to search for overlapping objects of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.overlapBuffer">
            <summary>
                Pre-allocated <c>Collider</c> array of a specified size (<see cref="F:itolib.Behaviours.Detectors.DetectRegion`1.maxObjects"/>), containing objects of type <typeparamref name="T"/>
                overlapping this <c>DetectRegion</c>.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.objectsFound">
            <summary>
                Total number of <c>Collider</c> instances found by the last search performed by this <c>DetectRegion</c>, regardless of whether or not they
                are of type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.DetectRegion`1.performedActivation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.Reset">
            <summary>
                Define default values for this <c>DetectRegion</c>.
            </summary>
            <remarks>Meant for defining a default <c>LayerMask</c> value (<see cref="F:itolib.Behaviours.Detectors.DetectRegion`1.layerMask"/>), tailored to the specific type of object to find.</remarks>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.OnNetworkSpawn">
            <summary>
                 Perform search or subscribe to a specific event, depending on the set <c>ActivationTime</c>.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                Listener called when any <c>Collider</c> enters the region.
            </summary>
            <param name="other">Collider that entered the region.</param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.OnTriggerExit(UnityEngine.Collider)">
            <summary>
                Listener called when any <c>Collider</c> exits the region.
            </summary>
            <param name="other">Collider that exited the region.</param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.CheckObjectsInRegion">
            <summary>
                Perform a non-allocating search within the defined region (<see cref="F:itolib.Behaviours.Detectors.DetectRegion`1.regionCollider"/>), and store any found <c>Collider</c> instances into
                the overlap buffer (<see cref="F:itolib.Behaviours.Detectors.DetectRegion`1.overlapBuffer"/>).
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.UnsubscribeFromEvents">
            <summary>
                Unsubscribe to the event that may have been subscribed to, depending on the set <c>ActivationTime</c>.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.DetectRegion`1.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                <c>DunGen</c> listener called when generation finishes, but before blockers and connectors are placed.
            </summary>
            <param name="dungeon">Dungeon that just finished generating.</param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.EnemyFilter">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.enemyName">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.alsoAppliesTo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.amountRequired">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.onReachedAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.onBelowAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.onAboveAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.fuzzySearch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.objectSearch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.triggerOnce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.subtractOnExit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemyFilter.isBlacklist">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemyFilter.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Detectors.EnemySensor">
            <summary>
                Represents a <c>DetectRegion</c> specifically for <c>EnemyAI</c> objects, with some additional stuff for enemy filtering.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemySensor.enemyFilters">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.EnemySensor.enemyAmounts">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.CheckObjectsInRegion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.OnTriggerExit(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.FoundEnemiesEachClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="enemyReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.FoundEnemiesAnyClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="enemiesFound"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.RegionEnteredClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="enemyReference"></param>
            <param name="exit"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.CheckFilter(itolib.Behaviours.Detectors.EnemyFilter,System.String,System.Int32@,System.Boolean@,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="filter"></param>
            <param name="enemyName"></param>
            <param name="enemyAmount"></param>
            <param name="matchedBlacklist"></param>
            <param name="subtract"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Detectors.EnemySensor.PurgeTulipSnake(EnemyAI)">
            <summary>
                TODO.
            </summary>
            <param name="enemy"></param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.HazardSensor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.HazardSensor.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.HazardSensor.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.HazardSensor.CheckObjectsInRegion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.HazardSensor.FoundHazardsEachClientRpc(Unity.Netcode.NetworkObjectReference)">
            <summary>
                TODO.
            </summary>
            <param name="hazardReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.HazardSensor.FoundHazardsAnyClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="hazardsFound"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.HazardSensor.DespawnHazard(UnityEngine.GameObject)">
            <summary>
                TODO.
            </summary>
            <param name="hazardToDespawn"></param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.MovementSensor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.triggerInterval">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.actionToTrigger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.holdAction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.actionRequiresStamina">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.onMovementDetected">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.timer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.MovementSensor.playerAction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.MovementSensor.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.MovementSensor.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.MovementSensor.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.MovementSensor.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.MovementSensor.PlayerMovedServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.MovementSensor.PlayerMovedClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.PlayerSensor">
            <summary>
                Represents a <c>DetectRegion</c> specifically for <c>PlayerControllerB</c> objects, with some additional stuff.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.PlayerSensor.onlyAffectLocalPlayer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.PlayerSensor.onPlayersAliveEach">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.PlayerSensor.onPlayersAliveAny">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.CheckObjectsInRegion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.OnTriggerExit(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.FoundPlayersEachClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.FoundPlayersAliveEachClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.FoundPlayersAnyClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playersFound"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.FoundPlayersAliveAnyClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playersFound"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.RegionEnteredServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="exit"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.PlayerSensor.RegionEnteredClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="exit"></param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.ScrapSensor">
            <summary>
                Represents a <c>DetectRegion</c> specifically for <c>GrabbableObject</c> objects, with some additional stuff.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.ScrapSensor.disabledColliders">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.ScrapSensor.disabledRenderers">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.CheckObjectsInRegion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.OnTriggerExit(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.DisableItemCollider(GrabbableObject)">
            <summary>
                TODO.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.DisableItemRenderer(GrabbableObject)">
            <summary>
                TODO.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.EnableItemRenderers">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.EnableItemColliders">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.DropItem(GrabbableObject)">
            <summary>
                TODO.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.FoundItemsEachClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="itemReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.FoundItemsAnyClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="itemsFound"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.RegionEnteredServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="itemReference"></param>
            <param name="exit"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.ScrapSensor.RegionEnteredClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="itemReference"></param>
            <param name="exit"></param>
        </member>
        <member name="T:itolib.Behaviours.Detectors.SprayThreshold">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SprayThreshold.spraysRequired">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SprayThreshold.onReachedThreshold">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SprayThreshold.onBelowThreshold">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SprayThreshold.onAboveThreshold">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SprayThreshold.triggerOnce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SprayThreshold.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Detectors.SpraySensor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.sprayThresholds">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.allowSprayPaint">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.allowWeedKiller">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.sprayAngle">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.sprayRange">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.proximityRange">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.onSprayPerformed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.layerMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Detectors.SpraySensor.timesSprayed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SpraySensor.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SpraySensor.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SpraySensor.PerformSpray(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SpraySensor.PerformSprayServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SpraySensor.PerformSprayClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Detectors.SpraySensor.PerformSprayLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Effects.AttachedEffect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AttachedEffect.effectToAttach">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AttachedEffect.followObject">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AttachedEffect.onAttach">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AttachedEffect.onDetach">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AttachedEffect.currentPosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AttachedEffect.targetPosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.AttachPlayer(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.AttachEnemy(EnemyAI)">
            <summary>
                TODO.
            </summary>
            <param name="enemy"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.AttachItem(GrabbableObject)">
            <summary>
                TODO.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.Attach(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="collider"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.DetachPlayer(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.DetachEnemy(EnemyAI)">
            <summary>
                TODO.
            </summary>
            <param name="enemy"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.DetachItem(GrabbableObject)">
            <summary>
                TODO.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.Detach(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="collider"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AttachedEffect.CreateInstance">
            <summary>
                TODO.
            </summary>
            <returns></returns> 
        </member>
        <member name="T:itolib.Behaviours.Effects.AudioGroup">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AudioGroup.sources">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AudioGroup.objectsToSearch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.AudioGroup.activationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.FindSourcesInObjects">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.PlayAll">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.PauseAll">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.UnpauseAll">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.StopAll">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.StopAllIncludingOneShots">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.SwitchAll(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.SwitchAll(itolib.Enums.AudioAction)">
            <summary>
                TODO.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.AudioGroup.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Effects.ExplodeEffect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.explosionPrefab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.spawnExplosionEffect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.damageCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.enemyDamageCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.otherDamageCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.killBounds">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.smallCameraShakeDistance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.bigCameraShakeDistance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.longCameraShakeDistance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.veryStrongCameraShakeDistance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.parentNetworkObject">
            <summary>
                Parent NetworkObject to despawn.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.despawnTimer">
            <summary>
                Delay in seconds until despawning, to allow effects to play.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.coverMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.ExplodeEffect.useVanillaExplosion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.ExplodeEffect.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.ExplodeEffect.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.ExplodeEffect.CheckObjectsInRegion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.ExplodeEffect.DespawnDelayed">
            <summary>
                Coroutine to despawn after a specified amount of time passes.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Effects.FearInducer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.onPlayerSpook">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.fearDistanceCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.lookAngle">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.lookRange">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.proximityRange">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.layerMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.FearInducer.localPlayerCamera">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.FearInducer.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.FearInducer.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.FearInducer.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Effects.PlayerAttachable">
            <summary>
                Represents an effect or concept that continually affects a player (attach), and eventually stops (detach).
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.onAttach">
            <summary>
                Callback invoked immediately after a player attaches, with the player in question as parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.triggerOnce">
            <summary>
                Whether players can attach multiple times to the same object or not.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.attachOnEnter">
            <summary>
                Whether players automatically attach upon entering the attach region or not.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.onDetach">
            <summary>
                Callback invoked immediately before a player detaches, with the player in question as parameter.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.detachTimer">
            <summary>
                Delay in seconds until the player is forcibly detached. Can be left at '0' to attach to the player for an indefinite amount of time.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.detachOnExit">
            <summary>
                Whether players automatically detach upon leaving the attach region or not.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.parentNetworkObject">
            <summary>
                Parent NetworkObject to despawn once detached, if set to despawn upon detaching.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.onDespawn">
            <summary>
                Callback invoked immediately before despawning.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.despawnOnDetach">
            <summary>
                Destroy and despawn after the player detaches.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.despawnTimer">
            <summary>
                Delay in seconds until despawning after detaching the player, to allow effects to play.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.attachLocally">
            <summary>
                Whether players attach locally, otherwise only one player can attach at a time.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.attachedPlayer">
            <summary>
                The player that's currently attached.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.attachedPlayerTransform">
            <summary>
                Cached transform of the currently attached player (if there is one).
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.attachedPlayerGameplayCamera">
            <summary>
                Cached transform of the currently attached player's gameplay camera (if there is one).
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.localPlayerAttached">
            <summary>
                Whether or not the local player is attached.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.hasTriggered">
            <summary>
                Whether or not a player has attached once already.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.attachCondition">
            <summary>
                Condition needed for the player to be attached.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerAttachable.detachCondition">
            <summary>
                Condition needed for the player to be detached.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                Attach upon coming into contact with a player.
            </summary>
            <param name="collider">Collider to attempt to attach to.</param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.OnTriggerExit(UnityEngine.Collider)">
            <summary>
                Detach player upon exiting the attach region.
            </summary>
            <param name="collider">Collider to attempt to detach.</param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.Update">
            <summary>
                Check if detach condition is met, in order to detach the player.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.AttachPlayerLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                Attach player on the local client.
            </summary>
            <param name="player">Player to attach.</param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.DetachPlayerLocal">
            <summary>
                Detach player on the local client.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.AttachPlayerServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                Attach the given player on the server.
            </summary>
            <param name="playerReference">NetworkObject reference of the player to attach.</param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.AttachPlayerClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                Attach the given player on clients.
            </summary>
            <param name="playerReference">NetworkObject reference of the player to attach.</param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.DetachPlayerServerRpc">
            <summary>
                Detach player on the server.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.DetachPlayerClientRpc">
            <summary>
                Detach player on clients.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.DetachPlayerDelayed">
            <summary>
                Coroutine to detach the player after a specified amount of time passes without the detach condition being met.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerAttachable.DespawnDelayed">
            <summary>
                Coroutine to despawn after a specified amount of time passes after detaching.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Effects.PlayerHinderer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.hindererCollider">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.hinderedMultiplier">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.muteAudio">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.allowJumping">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.requireStamina">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.sinkPlayer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.sinkingSpeedMultiplier">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.playerSinkingCurveOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.drownPlayer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.waterOverlay">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.onHinderStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.onHinderStop">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerHinderer.defaultPlayerSinkingCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.AttachPlayerLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.DetachPlayerLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.DrainPlayer(System.Single)">
            <summary>
                Drains a player... Ayo?
            </summary>
            <param name="drainAmount">Amount to drain from the attached player.</param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.HinderPlayerServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="stop"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerHinderer.HinderPlayerClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="stop"></param>
        </member>
        <member name="T:itolib.Behaviours.Effects.PlayerOuchie">
            <summary>
            	Script to deal a set (or random) amount of damage to a given player.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerOuchie.minDamage">
            <summary>
                Minimum damage value to inflict on a player.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerOuchie.maxDamage">
            <summary>
                Maximum damage value to inflict on a player.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerOuchie.playDamageSFX">
            <summary>
                Whether or not to play the vanilla player damage sound effect.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerOuchie.deathCause">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerOuchie.deathAnimation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.PlayerOuchie.deathLaunchForce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.PlayerOuchie.Ouchie(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="playerHurt"></param>
        </member>
        <member name="T:itolib.Behaviours.Effects.SpookyDefog">
            <summary>
                Disables v67's interior fog, if it's rolled for the current round.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SpookyDefog.Start">
            <summary>
                Wait until the round starts to deactivate interior fog.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SpookyDefog.OnDestroy">
            <summary>
                Unsubscribe from the StartNewRound event when destroyed.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SpookyDefog.DeactivateSpookyFog">
            <summary>
                Simply turn off the 'SpookyFog' GameObject.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SpookyDefog.DeactivateSpookyFogDelayed">
            <summary>
                Coroutine to turn off the 'SpookyFog' GameObject after 5 seconds.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Effects.SunScreen">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.SunScreen.sunTexture">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.SunScreen.onDungeonEntered">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.SunScreen.onDungeonExited">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Effects.SunScreen.foundSun">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.OnDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.HideSun(GameNetcodeStuff.PlayerControllerB,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
            <param name="reveal"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.HideSun(System.ValueTuple{EntranceTeleport,GameNetcodeStuff.PlayerControllerB})">
            <summary>
                TODO.
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.RevealSun(System.ValueTuple{EntranceTeleport,GameNetcodeStuff.PlayerControllerB})">
            <summary>
                TODO.
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:itolib.Behaviours.Effects.SunScreen.ToggleSunOnTeleport(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="T:itolib.Behaviours.Events.DelayedEvent">
            <summary>
            	TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.DelayedEvent.delayTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.DelayedEvent.runsContinuously">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.DelayedEvent.onDelayedEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.DelayedEvent.timer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.DelayedEvent.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.DelayedEvent.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.DelayedEvent.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.DelayedEvent.OnDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.DelayedEvent.ResetTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Events.HourEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.HourEvent.HasRun">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.HourEvent.playAtTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.HourEvent.onTimedEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Events.ScriptableEventListener">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.ScriptableEventListener.scriptableEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.ScriptableEventListener.actions">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.ScriptableEventListener.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.ScriptableEventListener.OnDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.ScriptableEventListener.InvokeEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Events.ToggleEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.ToggleEvent.toggleOn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.ToggleEvent.toggleOff">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.ToggleEvent.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.ToggleEvent.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.ToggleEvent.OnDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Events.WeightedEventEntry">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEventEntry.onEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.WeightedEventEntry.Weight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.WeightedEventEntry.SingleUse">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Events.WeightedEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.WeightedEvent.Random">
            <summary>
                Seeded Random instance initialized with the current map seed.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.WeightedEvent.CumulativeWeights">
            <summary>
               TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.WeightedEvent.TotalWeight">
            <summary>
               TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Events.WeightedEvent.WeightedEntries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.activationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.minRolls">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.maxRolls">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.seededRandom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.performedActivation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.weightedSelf">
            <summary>
                Cached instance of the current <c>WeightedEvent</c> as an <c>IWeightedScript</c>, to avoid having to cast. 
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.eventEntries">
            <summary>
                OBSOLETE
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.WeightedEvent.exhaustiveRolls">
            <summary>
                OBSOLETE
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.Awake">
            <summary>
                Cache already-cast <c>IWeightedScript</c> instance.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.OnNetworkSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.UnsubscribeFromEvents">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.RollFromServer">
            <summary>
                TODO.
            </summary> 
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.RollFromClient(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary> 
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.InvokeEventServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="weightIndex"></param>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.InvokeEventClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="weightIndex"></param>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.InvokeEventLocal(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="weightIndex"></param>
        </member>
        <member name="M:itolib.Behaviours.Events.WeightedEvent.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Events.EventWithWeight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.EventWithWeight.onEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.EventWithWeight.weight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Events.EventWithWeight.onlyOnce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.EventfulApparatus">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.EventfulApparatus.apparatusAudio">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnApparatusActivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDisconnectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDisconnect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnLightsFlicker">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnLightsOff">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDisplayWarning">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.SaveMaterialVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.SaveMeshVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.HideOnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnActivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnActivatePhysicsTrigger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnBatteryCharge">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnBatteryDrain">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnCollect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnCollectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDestroyHeldEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDiscardEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDiscardSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnDiscardSFXEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnEnemyGrab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnEnemyDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnEquip">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnEquipEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnGrab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnGroundReached">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnGroundReachedVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnInspect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnInspectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnInteract">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnInteractLeft">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnInteractRight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnPlace">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.OnPocketEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.FallWithCurveOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.EventfulApparatus.VariantIndex">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.OnNetworkSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.Activate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.HandleDisconnect">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.HandleCompatibility">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.GetItemDataToSave">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.LoadItemSaveData(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="saveData"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.ItemActivate(System.Boolean,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="used"></param>
            <param name="buttonDown"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.ActivatePhysicsTrigger(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.ChargeBatteries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.UseUpBatteries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.OnBroughtToShip">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.DestroyObjectInHand(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="playerHolding"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.DiscardItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.PlayDropSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.GrabItemFromEnemy(EnemyAI)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.DiscardItemFromEnemy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.EquipItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.GrabItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.OnHitGround">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.InspectItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.InteractItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.ItemInteractLeftRight(System.Boolean)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.OnPlaceObject">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.PocketItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.FallWithCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.SyncItemVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.SyncItemVariantServerRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.EventfulApparatus.SyncItemVariantClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemAudible">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.item">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.itemSource">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.itemSourceFar">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.audioClips">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.audioClipsFar">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.audibleRange">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.minVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.maxVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.minPitch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.maxPitch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.minLoudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.maxLoudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.volumeIsLoudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.transmitOverWalkie">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.triggerFromElsewhere">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.requireHolding">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemAudible.eventfulSelf">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.ManualActivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.StopAudio">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.ItemActivate(System.Boolean,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="used"></param>
            <param name="buttonDown"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.PlayNetworkedAudio(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
            <param name="clipFar"></param>
            <param name="volume"></param>
            <param name="pitch"></param>
            <param name="loudness"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.PlayNetworkedAudioServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerWhoCalled"></param>
            <param name="clip"></param>
            <param name="clipFar"></param>
            <param name="volume"></param>
            <param name="pitch"></param>
            <param name="loudness"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.PlayNetworkedAudioClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="playerWhoCalled"></param>
            <param name="clip"></param>
            <param name="clipFar"></param>
            <param name="volume"></param>
            <param name="pitch"></param>
            <param name="loudness"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.PlayAudioLocal(System.Int32,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
            <param name="clipFar"></param>
            <param name="volume"></param>
            <param name="pitch"></param>
            <param name="loudness"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.StopAudioServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerWhoCalled"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.StopAudioClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerWhoCalled"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemAudible.StopAudioLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemDiscardable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.item">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.parentNetworkObject">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.disableGrabOnDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.onDiscardItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.onDiscardItemHeld">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.onDiscardItemPocketed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.onDiscardItemsAll">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.despawnOnDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.despawnTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.despawnOnlyHides">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.onDespawnTimerStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemDiscardable.onDespawnTimerEnd">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.ForceDropItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.ForceDropItems">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.ForceDropItem(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="dropAll"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.ForceDropItemServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="slot"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.ForceDropItemClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="slot"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.ForceDropItemLocal(GameNetcodeStuff.PlayerControllerB,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
            <param name="slot"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemDiscardable.DespawnItemDelayed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemGrabbable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.FallWithCurveOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.VariantIndex">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.SaveMaterialVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.SaveMeshVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.HideOnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnActivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnActivatePhysicsTrigger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnBatteryCharge">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnBatteryDrain">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnCollect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnCollectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnDestroyHeldEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnDiscardEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnDiscardSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnDiscardSFXEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnEnemyGrab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnEnemyDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnEquip">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnEquipEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnGrab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnGroundReached">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnGroundReachedVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnInspect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnInspectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnInteract">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnInteractLeft">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnInteractRight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnPlace">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Grabbables.ItemGrabbable.OnPocketEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.GetItemDataToSave">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.LoadItemSaveData(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="saveData"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.ItemActivate(System.Boolean,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="used"></param>
            <param name="buttonDown"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.ActivatePhysicsTrigger(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.ChargeBatteries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.UseUpBatteries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.OnBroughtToShip">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.DestroyObjectInHand(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="playerHolding"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.DiscardItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.PlayDropSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.GrabItemFromEnemy(EnemyAI)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.DiscardItemFromEnemy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.EquipItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.GrabItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.OnHitGround">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.InspectItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.InteractItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.ItemInteractLeftRight(System.Boolean)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.OnPlaceObject">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.PocketItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.FallWithCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.SyncItemVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.SyncItemVariantServerRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemGrabbable.SyncItemVariantClientRpc(System.Int32)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemKickable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemKickable.kickUpwardAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemKickable.verticalOffsetCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemKickable.onPlayerKick">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemKickable.onEnemyKick">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemKickable.lastKickedBy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemKickable.kickTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemKickable.Reset">
            <summary>
                TODO.
            </summary> 
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemKickable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemKickable.ActivatePhysicsTrigger(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemKickable.FallWithCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemKickable.TryGetDestination(UnityEngine.Vector3@,UnityEngine.Transform)">
            <summary>
                TODO.
            </summary>
            <param name="destination"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemKickable.BeginTrajectoryLocal(itolib.Behaviours.Grabbables.DestinationInfo)">
            <summary>
                TODO.
            </summary>
            <param name="destinationInfo"></param>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.DestinationInfo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.startPosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.targetPosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.setInElevator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.setInShipRoom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.playerInvolved">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.enemyInvolved">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.playerReference">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.DestinationInfo.enemyReference">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.DestinationInfo.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.DestinationInfo.NetworkSerialize``1(Unity.Netcode.BufferSerializer{``0})">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemTargetable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.item">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.itemTransform">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.maxDistance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.fallDistance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.fallSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.rotationSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.fallCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.verticalFallCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.verticalFallCurveNoBounce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.collisionMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.trajectoryRay">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.rayHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemTargetable.eventfulSelf">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.FallWithCurve">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.TryGetDestination(UnityEngine.Vector3@,UnityEngine.Transform)">
            <summary>
                TODO.
            </summary>
            <param name="destination"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.TryGetDestination(itolib.Behaviours.Grabbables.DestinationInfo@,UnityEngine.Transform,GameNetcodeStuff.PlayerControllerB,EnemyAI)">
            <summary>
                TODO.
            </summary>
            <param name="destinationInfo"></param>
            <param name="origin"></param>
            <param name="player"></param>
            <param name="enemy"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.BeginTrajectoryServerRpc(itolib.Behaviours.Grabbables.DestinationInfo)">
            <summary>
                TODO.
            </summary>
            <param name="destinationInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.BeginTrajectoryClientRpc(itolib.Behaviours.Grabbables.DestinationInfo)">
            <summary>
                TODO.
            </summary>
            <param name="destinationInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.BeginTrajectoryLocal(itolib.Behaviours.Grabbables.DestinationInfo)">
            <summary>
                TODO.
            </summary>
            <param name="destinationInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemTargetable.SetKeyframeModes(UnityEngine.Keyframe[],UnityEngine.WeightedMode)">
            <summary>
                TODO.
            </summary>
            <param name="keyframes"></param>
            <param name="mode"></param>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemThrowable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemThrowable.onThrowStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemThrowable.onThrowFinish">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemThrowable.lastThrownBy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.Reset">
            <summary>
                TODO.
            </summary> 
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.ItemActivate(System.Boolean,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="used"></param>
            <param name="buttonDown"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.OnHitGround">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.OnHitGround(System.Int32)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.FallWithCurve">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.TryGetDestination(UnityEngine.Vector3@,UnityEngine.Transform)">
            <summary>
                TODO.
            </summary>
            <param name="destination"></param>
            <param name="origin"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemThrowable.BeginTrajectoryLocal(itolib.Behaviours.Grabbables.DestinationInfo)">
            <summary>
                TODO.
            </summary>
            <param name="destinationInfo"></param>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemWearable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.item">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.wearPosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.customBone">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.applyOffsetTo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.wearPositionOffset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.wearRotationOffset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.initialPosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.initialRotation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.boneToAttachTo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWearable.eventfulSelf">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.SetWearablePosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.SetWearablePositionServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.SetWearablePositionClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.SetWearablePositionLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.OnDiscardEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.OnEquip">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.OnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.EquipWearable(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="reset"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.EquipWearableServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="reset"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.EquipWearableClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="reset"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWearable.EquipWearableLocal(GameNetcodeStuff.PlayerControllerB,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
            <param name="reset"></param>
        </member>
        <member name="T:itolib.Behaviours.Grabbables.ItemWhackable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.item">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.weaponDamage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.maxObjectHits">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitID">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.weaponAudio">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.playHitSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.silentHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.chargeTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitCooldown">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onReelingStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onReelingFinish">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onWeaponSwing">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onWeaponHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onWeaponHitLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onWeaponHitVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onWeaponHitVariantLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onSurfaceHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.onSurfaceHitLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.shovelMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitSFXMask">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.lastHeldBy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitBuffer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.hitEnemies">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.objectsHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.isHoldingButton">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.reelingUp">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.whackingCoroutine">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Grabbables.ItemWhackable.eventfulSelf">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.ItemActivate(System.Boolean,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="used"></param>
            <param name="buttonDown"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.HandleWhacking">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.DiscardItemEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.Whack">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.WeaponHitServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="enemyHit"></param>
            <param name="surfaceIndex"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.WeaponHitClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="enemyHit"></param>
            <param name="surfaceIndex"></param>
        </member>
        <member name="M:itolib.Behaviours.Grabbables.ItemWhackable.WeaponHitLocal(System.Boolean,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="enemyHit"></param>
            <param name="surfaceIndex"></param>
        </member>
        <member name="T:itolib.Behaviours.Helpers.ActivateApparatus">
            <summary>
                Activates the Apparatus if it's spawned in the middle of a round, also assigns Old Bird enemy type.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.ActivateApparatus.OldBirdEnemyType">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.ActivateApparatus.OnNetworkSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.ActivateApparatus.Activate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Helpers.CeilingAdjuster">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.CeilingAdjuster.offsetToApply">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.CeilingAdjuster.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Helpers.OutOfBoundsAdjuster">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.OutOfBoundsAdjuster.offsetToApply">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.OutOfBoundsAdjuster.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Helpers.PooledObject`1">
            <summary>
                Implementation of <c>IPooledObject</c> for Unity objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:itolib.Behaviours.Helpers.PooledObject`1.ObjectID">
            <summary>
                Instance number for the <c>PooledObject</c>'s current pool. Intended for tracking and/or limiting the amount of created instances.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.PooledObject`1.TakenBy">
            <summary>
                External <c><typeparamref name="T"/></c> that has taken 'ownership' of this <c>PooledObject</c> instance.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.PooledObject`1.NextPooledObject">
            <summary>
                Next <c>PooledObject</c> instance in the pool.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.PooledObject`1.maxInstances">
            <summary>
                Maximum number of instances that can be created for this <c>PooledObject</c>.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.PooledObject`1.createInstances">
            <summary>
                Number of <c>PooledObject</c> instances to prepare and have ready from the start.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.PooledObject`1.pooledSelf">
            <summary>
                Cached instance of the current <c>PooledObject</c> as an <c>IPooledObject</c>, to avoid having to cast. 
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.PooledObject`1.Awake">
            <summary>
                Cache already-cast <c>IPooledObject</c> instance.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.PooledObject`1.Start">
            <summary>
                Begin preparing <c>PooledObject</c> instances (if the current object is the root).
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.PooledObject`1.CreateInstance">
            <summary>
                Instantiates a new <c>IPooledObject</c> instance.
            </summary>
            <returns>The newly-created <c>IPooledObject</c> instance.</returns>
        </member>
        <member name="T:itolib.Behaviours.Helpers.SaneReverbTrigger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.SaneReverbTrigger.delayCheck">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.SaneReverbTrigger.onlyOnEnter">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.SaneReverbTrigger.timeSinceLastCheck">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SaneReverbTrigger.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SaneReverbTrigger.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SaneReverbTrigger.OnTriggerStay(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="other"></param>
        </member>
        <member name="T:itolib.Behaviours.Helpers.SimulateAnomaly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.SimulateAnomaly.SingleItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.SimulateAnomaly.currentSeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SimulateAnomaly.SimulateChallengeFile(System.Random@,SelectableLevel)">
            <summary>
                TODO.
            </summary>
            <param name="anomalyRandom"></param>
            <param name="currentLevel"></param>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SimulateAnomaly.SimulateSpawnScrap(System.Random@,SelectableLevel)">
            <summary>
                TODO.
            </summary>
            <param name="anomalyRandom"></param>
            <param name="currentLevel"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Behaviours.Helpers.DoorwayType">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.DoorwayType.Unspecified">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.DoorwayType.Entrance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.DoorwayType.Exit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Helpers.DoorwayType.Neither">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Helpers.SpecificDoorway">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.SpecificDoorway.DoorwayType">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.SpecificDoorway.AllowSwap">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.SpecificDoorway.WeightOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Helpers.SpecificDoorway.WeightMultiplier">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SpecificDoorway.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Helpers.SpecificDoorway.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Interactables.InteractClimbable">
            <summary>
                Represents a ladder with customizable climbing speed.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractClimbable.climbSpeed">
            <summary>
                The climbing speed to set when using this specific ladder.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractClimbable.normalClimbSpeed">
            <summary>
                The player's regular climbing speed, to reset their climbing speed after they get off the ladder.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractClimbable.Reset">
            <summary>
                Set default ladder properties.
            </summary>
            <remarks>NOTE: Still need to set the Transform points for the InteractTrigger, but the settings here are in default vanilla ladders.</remarks>
        </member>
        <member name="T:itolib.Behaviours.Interactables.InteractLockable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.doorHoverMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.doorUnlockMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.doorLockedMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.doorLockedKeyMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.doorLockedKeyControllerMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.lockPickHoverMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.lockPickUnlockMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.lockPickUnlockTimerMessage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.wasUnlockedLastFrame">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractLockable.startedLocked">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractLockable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractLockable.LockDoor(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="timeToLockPick"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractLockable.UnlockDoor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractLockable.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Interactables.Notification">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Interactables.Notification.AlreadySeen">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.Notification.headerText">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.Notification.bodyText">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.Notification.showOnce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.Notification.#ctor">
            <summary>
                TODO.
            </summary> 
        </member>
        <member name="M:itolib.Behaviours.Interactables.Notification.SetNotificationSeen">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Interactables.InteractPurchasable">
            <summary>
                Represents an InteractTrigger that can spawn an object when interacted with, for a price.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Interactables.InteractPurchasable.Terminal">
            <summary>
                Cached Terminal instance, to actually interact with the shared ship credits.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractPurchasable.spawnPrefab">
            <summary>
                Prefab to spawn upon a successful transaction.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractPurchasable.spawnTransform">
            <summary>
                Position and rotation of the purchasable object when spawned.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractPurchasable.price">
            <summary>
                Credits required to spawn the purchasable object. Set to -1 to disable purchasing stuff at all.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractPurchasable.onPurchase">
            <summary>
                Callback invoked when a transaction is complete but the object has not yet been spawned.
            </summary>
            <remarks>
                NOTE: Actions won't run using the instantiated object, but they can be used to modify the prefab on the host before spawning it, which can then
                be synchronized with clients using NetworkVariables... Not ideal.
            </remarks>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractPurchasable.onPurchaseNotify">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractPurchasable.purchaseNotification">
            <summary>
                TODO
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractPurchasable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractPurchasable.RequestPurchaseServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                Attempt to purchase and spawn instance of the purchasable object.
            </summary>
            <param name="playerReference">NetworkBehaviour reference of the player attempting the purchase.</param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractPurchasable.SendNotificationClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32,System.Boolean)">
            <summary>
                Send a notification message to a specific player.
            </summary>
            <param name="playerReference">NetworkBehaviour reference of the player to receive the notification.</param>
            <param name="price">Price of the purchasable object.</param>
            <param name="success">Whether or not the purchase was succesful.</param>
        </member>
        <member name="T:itolib.Behaviours.Interactables.InteractSeatable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.actionToExit">
            <summary>
                Action required for the player to stop sitting down. See 'UnityEngine.InputSystem.Key' for number values.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.seatableSource">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.onPlayerSit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.onPlayerStand">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.sittingPlayer">
            <summary>
                The player currently sitting on this object.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.localPlayerSeated">
            <summary>
                Whether or not the local player is sitting on this object.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.playerExitPoint">
            <summary>
                
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractSeatable.playerAction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.Reset">
            <summary>
                Set default seat properties.
            </summary>
            <remarks>NOTE: Still need to set the Transform points for the InteractTrigger, but the settings here are the vanilla Cruiser seats.</remarks>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.SetPlayerOnSeatLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="playerSitting"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.ExitChairLocal(System.Boolean)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.SetPlayerOnSeatServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.SetPlayerOnSeatClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.ExitChairServerRpc">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractSeatable.ExitChairClientRpc">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Interactables.InteractTalkable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractTalkable.onStartTalking">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractTalkable.onStopTalking">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Interactables.InteractTalkable.isActive">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.Reset">
            <summary>
                Set default talkable properties.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.EnableWalkieLocal(System.Single)">
            <summary>
                TODO.
            </summary>
            <param name="_"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.EnableWalkieServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.EnableWalkieClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.DisableWalkieLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="_"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.DisableWalkieServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Interactables.InteractTalkable.DisableWalkieClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.HealthCondition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.HealthCondition.healthAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.HealthCondition.onReachedHealth">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.HealthCondition.onBelowHealth">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.HealthCondition.onAboveHealth">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.HealthCondition.runOnce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.HealthCondition.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.DamageHittable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.DamageHittable.health">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.DamageHittable.healthConditions">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.PerformHitLocal(itolib.Behaviours.Networking.HitInfo)">
            <summary>
                TODO.
            </summary>
            <param name="hitInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.IncrementHealth(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="health"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.SetHealth(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="health"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.SetHealthServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="health"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.SetHealthClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="health"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.DamageHittable.SetHealthLocal(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="health"></param>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.PhysicsHittable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PhysicsHittable.hittableBody">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PhysicsHittable.hitForce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PhysicsHittable.forceMode">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PhysicsHittable.PerformHitLocal(itolib.Behaviours.Networking.HitInfo)">
            <summary>
                TODO.
            </summary>
            <param name="hitInfo"></param>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.PlatformGrabbable">
            <summary>
                Represents a platform players can grab and hold on to.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformGrabbable.SyncedStateVariant">
            <summary>
                Synchronized value for the animation variant to play when the player attaches.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformGrabbable.SyncedPitch">
            <summary>
                Synchronized pitch value for the platform sound effects.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.platformAnimator">
            <summary>
                Animator instance of the platform, used to play an animation once a player grabs the platform. Optional if already playing an animation,
                or the platform is stationary.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.stateName">
            <summary>
                Name of the animation state to play once a player grabs the platform. Make sure to leave out any numbers at the end if using animation variants.
                Optional if already playing an animation, or the platform is stationary.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.stateVariant">
            <summary>
                Value for the animation variant to play when the player attaches, which is appended to 'stateName'. Should only be updated in the editor, or in-game
                before spawning the platform. Leaving it at '-1' disables animation variants.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.grabSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.playerOffset">
            <summary>
                An offset to apply to the player's position while grabbing on to the platform.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.actionToHold">
            <summary>
                Key required to be held for the player to hang on to the platform. See 'UnityEngine.InputSystem.Key' for number values. Leaving it at '-1' allows players to
                remain attached without holding anything, until being detached through other means (e.g. 'detachTimer').
            </summary>
            <remarks>Probably worth looking into adding controller support for this.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.allowTwoHanded">
            <summary>
                Allow players to carry two-handed items while grabbing on to the platform.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.detachOnEnemyCollision">
            <summary>
                Detach the player if an enemy collides with the platform.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.detachOnWallCollision">
            <summary>
                Detach the player if the platform collides with a wall.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.detachOnSpecialAnimation">
            <summary>
                Detach the player if the player is in a special animation.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.platformSource">
            <summary>
                AudioSource instance of the platform, used to play sound effects at various points. Optional if not playing any sound effects.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.spawnSFX">
            <summary>
                Sound effect to play when the platform spawns. Optional if not playing a spawning sound effect.
            </summary>
            <remarks>Could be swapped for a list of sounds to pick from randomly.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.attachSFX">
            <summary>
                Sound effect to play when a player grabs on to the platform. Optional if not playing an attaching sound effect.
            </summary>
            <remarks>Could be swapped for a list of sounds to pick from randomly.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.destroySFX">
            <summary>
                Sound effect to play when the platform despawns and is destroyed. Optional if not playing a despawn sound effect.
            </summary>
            <remarks>Could be swapped for a list of sounds to pick from randomly.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.minPitch">
            <summary>
                Lowest pitch that platform sound effects can have. Both can be set to the same value to disable pitch variation.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.maxPitch">
            <summary>
                Highest pitch that platform sound effects can have. Both can be set to the same value to disable pitch variation.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.playerAction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGrabbable.platformTransform">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.OnNetworkSpawn">
            <summary>
                Update fields and properties when the object spawns.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.OnTriggerEnter(UnityEngine.Collider)">
            <summary>
                TODO.
            </summary>
            <param name="collider"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.AttachPlayerLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                Attach player to the platform on the local client.
            </summary>
            <param name="player">Player to attach to the platform.</param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.DetachPlayerLocal">
            <summary>
                Detach player from the platform on the local client.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGrabbable.SwitchVariant(System.Int32)">
            <summary>
                Switch animation variant for the platform locally. Won't actually synchronize with other players unless the platform is spawning.
            </summary>
            <param name="variant">Value of the animation variant to switch to.</param>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.PlatformGravity">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformGravity.applyReducedMotion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGravity.IsPhysicsRegionActive">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGravity.CancelPlayerMomentum(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGravity.CancelPlayerMomentumServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGravity.CancelPlayerMomentumClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformGravity.CancelPlayerMomentumLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.PlatformUnstable">
            <summary>
                Represents a platform that can collapse, either due to player carry weight or a flat percentage chance.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformUnstable.Random">
            <summary>
                Map-seeded (local) Random instance for randomization purposes.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformUnstable.PlatformCollapsed">
            <summary>
                Whether or not the platform has collapsed.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformUnstable.LocalPlayerOnPlatform">
            <summary>
                Whether or not the local player is on top of the platform.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformUnstable.CollapseChance">
            <summary>
                Chance for the platform to collapse every interval.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Kinematics.PlatformUnstable.TimeSinceLastCheck">
            <summary>
                Time passed since last collapse interval.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.collapseChanceInterval">
            <summary>
                Interval in seconds between each collapse check.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.collapseTimer">
            <summary>
                Duration of the collapse animation in seconds, for playing any effects or animations. Can be left at 0 to immediately destroy or start the respawn timer.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.baseCollapseChance">
            <summary>
                Base chance for the platform to collapse (regardless of player weight). Can be left at 0 to 
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.weightMultiplier">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.respawnPlatform">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.respawnTimer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.shakePlayerScreen">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.shakeAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.collapseShakeAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.platformContainer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.platformAnimator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.shakeState">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.collapseState">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.respawnState">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.platformSource">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.shakeSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.collapseSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlatformUnstable.respawnSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformUnstable.ShakePlatformLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformUnstable.CollapsePlatformLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformUnstable.ShakePlatformServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformUnstable.ShakePlatformClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformUnstable.CollapsePlatformServerRpc">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlatformUnstable.CollapsePlatformClientRpc">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.LaunchParameters">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.LaunchParameters.forceToApply">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.LaunchParameters.forceDirection">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.LaunchParameters.considerRotationFrom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.LaunchParameters.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.PlayerLauncher">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.forcesToApply">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.launchSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.detachOnLand">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.detachOnPeak">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.negateFallDamage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.disableMovement">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.crouchingPreventsLaunch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.rocketJump">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.dropPlayerItemsAtStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.dropPlayerItemsAtEnd">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.dropHeldItemAtStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.dropHeldItemAtEnd">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.lockCamera">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.rotateCamera">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.rotationSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.targetAngle">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.clampAngle">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.playerModelTransform">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.fallTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerLauncher.targetForce">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerLauncher.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerLauncher.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerLauncher.AttachPlayerLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerLauncher.AttachPlayerLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerLauncher.DetachPlayerLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Kinematics.PlayerSeater">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.actionToUnseat">
            <summary>
                Key required to be pressed for the player to unsit. See 'UnityEngine.InputSystem.Key' for number values. Leaving it at '-1' allows players to
                remain attached until being detached through other means (e.g. 'detachTimer').
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.sittingAnimation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.hidePlayerItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.enterVehicleAnimation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.cameraTurnSpeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.onPlayerSit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.onPlayerUnsit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.playerAction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Kinematics.PlayerSeater.sittingAnimationID">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.AttachPlayerLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.DetachPlayerLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.PlayerSitServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="unsit"></param>
        </member>
        <member name="M:itolib.Behaviours.Kinematics.PlayerSeater.PlayerSitClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="unsit"></param>
        </member>
        <member name="T:itolib.Behaviours.Materials.MaterialScroller">
            <summary>
                Material scroller? I hardly know 'er.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialScroller.scrollingMat">
            <summary>
                The material to scroll.
            </summary>
            <remarks><b>NOTE:</b> A custom shader with both a '_TilingX/Y' and an '_OffsetX/Y' parameter is required.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialScroller.currentFrame">
            <summary>
                Current frame being displayed (can be used to start at a specific frame).
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialScroller.frames">
            <summary>
                Total number of frames in the texture.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialScroller.offsetAxis">
            <summary>
                Axis to scroll across.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialScroller.offsetPerFrame">
            <summary>
                Offset to apply every frame.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialScroller.offsetID">
            <summary>
                ID of the exposed offset shader property.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Materials.MaterialSwap">
            <summary>
                Represents a material swap to perform on activation.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwap.searchKeyword">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwap.replacementMaterial">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwap.affectedObjects">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwap.affectChildren">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwap.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Materials.MaterialSwapper">
            <summary>
                Swaps materials based on a given word search. Can perform multiple at a time, on various different objects.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwapper.materialSwaps">
            <summary>
                List of material swaps to perform.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwapper.swapsPerActivation">
            <summary>
                The number of swaps done at a time per activation. If set to a value of <b>1</b> (for example) it'll sequentially go down the
                list of swaps and perform them one by one, each time it's activated. If left at the default value of <b>0</b> it'll perform all swaps at once.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwapper.activationTime">
            <summary>
                Activation time for the automatic material swap.
            </summary>
            <remarks><b>NOTE:</b> Can be set to <c>Manual</c> to disable the automatic swap, but is not required for triggering manual swaps afterwards.</remarks>
        </member>
        <member name="F:itolib.Behaviours.Materials.MaterialSwapper.swapIndex">
            <summary>
                Current 
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwapper.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwapper.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwapper.OnDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwapper.SwapMaterials">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwapper.PerformSwap(UnityEngine.Renderer,System.String,UnityEngine.Material)">
            <summary>
                TODO.
            </summary>
            <param name="renderer"></param>
            <param name="searchKeyword"></param>
            <param name="replacementMaterial"></param>
        </member>
        <member name="M:itolib.Behaviours.Materials.MaterialSwapper.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Networking.HitInfo">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.HitInfo.damage">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.HitInfo.direction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.HitInfo.hitID">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.HitInfo.hitByPlayer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.HitInfo.playerReference">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.HitInfo.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.HitInfo.NetworkSerialize``1(Unity.Netcode.BufferSerializer{``0})">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
        </member>
        <member name="T:itolib.Behaviours.Networking.NetworkedHittable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedHittable.defaultHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedHittable.onHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedHittable.onPlayerHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedHittable.onPlayerHitLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.Hit(System.Int32,UnityEngine.Vector3,GameNetcodeStuff.PlayerControllerB,System.Boolean,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="force"></param>
            <param name="hitDirection"></param>
            <param name="playerWhoHit"></param>
            <param name="playHitSFX"></param>
            <param name="hitID"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.PerformHit">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.PerformHit(itolib.Behaviours.Networking.HitInfo)">
            <summary>
                TODO.
            </summary>
            <param name="hitInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.PerformHitServerRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Networking.HitInfo)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="hitInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.PerformHitClientRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Networking.HitInfo)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="hitInfo"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.PerformHitLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedHittable.PerformHitLocal(itolib.Behaviours.Networking.HitInfo)">
            <summary>
                TODO.
            </summary>
            <param name="hitInfo"></param>
        </member>
        <member name="T:itolib.Behaviours.Networking.SyncedAudioProperties">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.SyncedAudioProperties.volume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.SyncedAudioProperties.pitch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.SyncedAudioProperties.loudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.SyncedAudioProperties.walkieVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.SyncedAudioProperties.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.SyncedAudioProperties.NetworkSerialize``1(Unity.Netcode.BufferSerializer{``0})">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
        </member>
        <member name="T:itolib.Behaviours.Networking.NetworkedSource">
            <summary>
                Synced networking for AudioSource components, also contains some additional stuff.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.syncedSource">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.audioClips">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.minVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.maxVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.minPitch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.maxPitch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.audibleRange">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.minLoudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.maxLoudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.volumeIsLoudness">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.transmitOverWalkie">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.overrideWalkieVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.minWalkieVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSource.maxWalkieVolume">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.OnNetworkSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayAudio">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayAudioServerRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Networking.SyncedAudioProperties)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="audioProperties"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayAudioClientRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Networking.SyncedAudioProperties)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="audioProperties"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayAudioLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayAudioLocal(itolib.Behaviours.Networking.SyncedAudioProperties)">
            <summary>
                TODO.
            </summary>
            <param name="audioProperties"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShot(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShotServerRpc(System.Int32,Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Networking.SyncedAudioProperties)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
            <param name="playerReference"></param>
            <param name="audioProperties"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShotClientRpc(System.Int32,Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Networking.SyncedAudioProperties)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
            <param name="playerReference"></param>
            <param name="audioProperties"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShotLocal(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShotLocal(System.Int32,itolib.Behaviours.Networking.SyncedAudioProperties)">
            <summary>
                TODO.
            </summary>
            <param name="clip"></param>
            <param name="audioProperties"></param>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShotRandom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.PlayOneShotRandomLocal">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSource.RollRandomizedProperties">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="T:itolib.Behaviours.Networking.NetworkedSpawner`1">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Networking.NetworkedSpawner`1.PrefabInstances">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.spawnLocations">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.exhaustiveLocations">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.spawnAreas">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.exhaustiveAreas">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.minSpawns">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.maxSpawns">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.activationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.destroySpawner">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.destroyWithScene">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Networking.NetworkedSpawner`1.performedActivation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSpawner`1.GetPrefabToSpawn">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSpawner`1.PerformSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSpawner`1.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSpawner`1.UnsubscribeFromEvents">
            <summary>
                Unsubscribe to the event that may have been subscribed to, depending on the set <c>ActivationTime</c>.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Networking.NetworkedSpawner`1.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="T:itolib.Behaviours.Props.ConnectorMerger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ConnectorMerger.tolerance">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ConnectorMerger.moveToCenter">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ConnectorMerger.priority">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ConnectorMerger.nameFilter">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ConnectorMerger.connectorsFound">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ConnectorMerger.Reset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ConnectorMerger.CheckObjectsInRegion">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ConnectorMerger.DisableSelf(itolib.Behaviours.Props.ConnectorMerger)">
            <summary>
                TODO.
            </summary>
            <param name="otherConnector"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ConnectorMerger.DisableOtherConnector(itolib.Behaviours.Props.ConnectorMerger)">
            <summary>
                TODO.
            </summary>
            <param name="connector"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ConnectorMerger.DisableBothConnectors(itolib.Behaviours.Props.ConnectorMerger)">
            <summary>
                TODO.
            </summary>
            <param name="connector"></param>
        </member>
        <member name="T:itolib.Behaviours.Props.DungeonStoryLog">
            <summary>
            	TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.DungeonStoryLog.onLogSpawned">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.DungeonStoryLog.onLogCollected">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.DungeonStoryLog.onAlreadyUnlocked">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonStoryLog.Start">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonStoryLog.CollectLogSynced(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonStoryLog.CollectLogServerRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonStoryLog.CollectLogClientRpc(Unity.Netcode.NetworkBehaviourReference)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonStoryLog.CollectLogLocal(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
        </member>
        <member name="T:itolib.Behaviours.Props.DungeonTelevision">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.DungeonTelevision.TelevisionUnlockableItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.DungeonTelevision.tvTrigger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.DungeonTelevision.startDeactivated">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonTelevision.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonTelevision.OnEnable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonTelevision.OnDisable">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonTelevision.TVFinishedClip(UnityEngine.Video.VideoPlayer)">
            <summary>
                TODO.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.DungeonTelevision.Update">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Props.HazardReplacement">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.HazardReplacement.originalHazard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.HazardReplacement.replacingHazard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.HazardReplacement.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Props.HazardReplacer">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.HazardReplacer.hazardReplacements">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.HazardReplacer.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Props.PrefabSpawner">
            <summary>
            	TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.PrefabSpawner.Random">
            <summary>
                Seeded Random instance initialized with the current map seed.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.PrefabSpawner.prefabToSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.PrefabSpawner.parentTransform">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.PrefabSpawner.useLocalRotation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.PrefabSpawner.skipInactive">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.PrefabSpawner.seededRandom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.PrefabSpawner.GetPrefabToSpawn">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Props.PrefabSpawner.PerformSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.PrefabSpawner.SpawnPrefab(UnityEngine.Transform)">
            <summary>
                TODO.
            </summary>
            <param name="spawnLocation"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.PrefabSpawner.SpawnPrefab(UnityEngine.BoxCollider)">
            <summary>
                TODO.
            </summary>
            <param name="spawnArea"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.PrefabSpawner.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.PrefabSpawner.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Props.ScrapInjector">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapInjector.modifiedRarities">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapInjector.OnDungeonComplete(DunGen.Dungeon)">
            <summary>
                TODO.
            </summary>
            <param name="dungeon"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapInjector.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Behaviours.Props.SyncedItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.SyncedItem.position">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.SyncedItem.rotation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.SyncedItem.scrapValue">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.SyncedItem.meshVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.SyncedItem.materialVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.SyncedItem.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.SyncedItem.NetworkSerialize``1(Unity.Netcode.BufferSerializer{``0})">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
        </member>
        <member name="T:itolib.Behaviours.Props.ScrapWeightEntry">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapWeightEntry.itemToSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapWeightEntry.Weight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapWeightEntry.SingleUse">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapWeightEntry.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapWeightEntry.#ctor(SpawnableItemWithRarity)">
            <summary>
                TODO.
            </summary>
            <param name="itemWithRarity"></param>
        </member>
        <member name="T:itolib.Behaviours.Props.ScrapSpawner">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapSpawner.ItemPool">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapSpawner.ItemsToSync">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapSpawner.CumulativeWeights">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapSpawner.TotalWeight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapSpawner.WeightedEntries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.tagsToSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.requireAllTags">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.useMoonScrapSpawns">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.exhaustivePool">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.overrideMinValue">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.overrideMaxValue">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.applyScrapMultiplier">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.allowMeshVariants">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.allowMaterialVariants">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.fallToGround">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.randomizePosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.applyRestingRotation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.skipInactive">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.seededRandom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.respectSingleItemDay">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapSpawner.weightedSelf">
            <summary>
                Cached instance of the current <c>WeightedEvent</c> as an <c>IWeightedScript</c>, to avoid having to cast. 
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.GetPrefabToSpawn">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.PerformSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.SpawnItem(UnityEngine.Transform)">
            <summary>
                TODO.
            </summary>
            <param name="spawnLocation"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.SpawnItem(UnityEngine.BoxCollider)">
            <summary>
                TODO.
            </summary>
            <param name="spawnArea"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.SpawnItem(Unity.Netcode.NetworkObject,UnityEngine.Vector3,UnityEngine.Quaternion)">
            <summary>
                TODO.
            </summary>
            <param name="itemToSpawn"></param>
            <param name="spawnPosition"></param>
            <param name="spawnRotation"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.Awake">
            <summary>
                Cache already-cast <c>IWeightedScript</c> instance.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.OnNetworkSpawn">
            <summary>
                TOOD.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.SyncAllItemValuesServerRpc">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.SyncItemValuesClientRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Props.SyncedItem)">
            <summary>
                TODO.
            </summary>
            <param name="itemReference"></param>
            <param name="syncedItem"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapSpawner.SyncItemValuesOnSpawn(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Props.SyncedItem)">
            <summary>
                TODO.
            </summary>
            <param name="itemReference"></param>
            <param name="syncedItem"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Behaviours.Props.TeleportData">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.TeleportData.position">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.TeleportData.rotation">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.TeleportData.NetworkSerialize``1(Unity.Netcode.BufferSerializer{``0})">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serializer"></param>
        </member>
        <member name="T:itolib.Behaviours.Props.ScrapTeleporter">
            <summary>
            	TODO.
            </summary>
        </member>
        <member name="P:itolib.Behaviours.Props.ScrapTeleporter.Random">
            <summary>
                Seeded Random instance initialized with the current map seed.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.availableScrap">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.specificItems">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.teleportPoints">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.teleportAreas">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.minAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.maxAmount">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.fallToGround">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.randomizePosition">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.exhaustivePoints">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.exhaustiveAreas">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Behaviours.Props.ScrapTeleporter.activationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapTeleporter.OnNetworkSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapTeleporter.OnDestroy">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapTeleporter.ObtainSpawnedScrap(System.Collections.Generic.List{GrabbableObject})">
            <summary>
                TODO.
            </summary>
            <param name="spawnedScrap"></param>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapTeleporter.TeleportScrap">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapTeleporter.TeleportScrapClientRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Props.TeleportData)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Behaviours.Props.ScrapTeleporter.TeleportScrapDelayed(Unity.Netcode.NetworkBehaviourReference,itolib.Behaviours.Props.TeleportData)">
            <summary>
                TODO.
            </summary>
            <param name="itemReference"></param>
            <param name="teleport"></param>
            <returns></returns>
        </member>
        <member name="P:itolib.Compatibility.BagConfigCompatibility.Enabled">
            <summary>
                Whether BagConfig is present in the BepInEx Chainloader or not.
            </summary>
        </member>
        <member name="P:itolib.Compatibility.BagConfigCompatibility.WeedKillerPrefab">
            <summary>
                Obtain Weed Killer prefab.
            </summary>
        </member>
        <member name="T:itolib.Compatibility.CrowdControlCompatibility">
            <summary>
                Compatibility between WeatherConditional and CrowdControl.
            </summary>
        </member>
        <member name="P:itolib.Compatibility.CrowdControlCompatibility.Enabled">
            <summary>
                Whether CrowdControl is present in the BepInEx Chainloader or not.
            </summary>
        </member>
        <member name="E:itolib.Compatibility.CrowdControlCompatibility.OnCCWeatherChanged">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Compatibility.FacilityMeltdownCompatibility">
            <summary>
                Compatibility between TwinApparatus and FacilityMeltdown.
            </summary>
        </member>
        <member name="P:itolib.Compatibility.FacilityMeltdownCompatibility.Enabled">
            <summary>
                Whether FacilityMeltdown is present in the BepInEx Chainloader or not.
            </summary>
        </member>
        <member name="M:itolib.Compatibility.FacilityMeltdownCompatibility.HalveTwinValue(itolib.PlayZone.TwinApparatus)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Compatibility.FacilityMeltdownCompatibility.InitiateMeltdown">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Compatibility.PizzaTowerEscapeMusicCompatibility">
            <summary>
                Compatibility between TwinApparatus and PizzaTowerEscapeMusic.
            </summary>
        </member>
        <member name="P:itolib.Compatibility.PizzaTowerEscapeMusicCompatibility.Enabled">
            <summary>
                Whether PizzaTowerEscapeMusic is present in the BepInEx Chainloader or not.
            </summary>
        </member>
        <member name="M:itolib.Compatibility.PizzaTowerEscapeMusicCompatibility.SwitchTwin(itolib.PlayZone.TwinApparatus)">
            <summary>
                TODO.
            </summary>
            <param name="twin"></param>
        </member>
        <member name="T:itolib.Compatibility.TVLoaderCompatibility">
            <summary>
                Compatibility between DungeonTelevision and TVLoader.
            </summary>
        </member>
        <member name="P:itolib.Compatibility.TVLoaderCompatibility.Enabled">
            <summary>
                Whether TVLoader is present in the BepInEx Chainloader or not.
            </summary>
        </member>
        <member name="T:itolib.Compatibility.WeatherRegistryCompatibility">
            <summary>
                Compatibility between WeatherConditional and WeatherRegistry.
            </summary>
        </member>
        <member name="P:itolib.Compatibility.WeatherRegistryCompatibility.Enabled">
            <summary>
                Whether WeatherRegistry is present in the BepInEx Chainloader or not.
            </summary>
        </member>
        <member name="E:itolib.Compatibility.WeatherRegistryCompatibility.OnWeatherEffectsApply">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Config">
            <summary>
                Class containing and defining various configuration options.
            </summary>
        </member>
        <member name="M:itolib.Config.#ctor(BepInEx.Configuration.ConfigFile)">
            <summary>
                Constructor for initializing plugin configuration.
            </summary>
            <param name="cfg">BepInEx configuration file.</param>
        </member>
        <member name="M:itolib.Config.ClearOrphanedEntries(BepInEx.Configuration.ConfigFile)">
            <summary>
                Remove old (orphaned) configuration entries.
            </summary>
            <remarks>Obtained from: https://lethal.wiki/dev/intermediate/custom-configs#better-configuration</remarks>
            <param name="config">The config file to clear orphaned entries from.</param>
        </member>
        <member name="T:itolib.Enums.ActivationTime">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ActivationTime.Immediate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ActivationTime.DungeonComplete">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ActivationTime.ScrapSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ActivationTime.HazardSpawn">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ActivationTime.StartOfRound">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ActivationTime.Manual">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Enums.AudioAction">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.AudioAction.Initialize">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.AudioAction.Play">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.AudioAction.Pause">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.AudioAction.Unpause">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.AudioAction.Stop">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.AudioAction.StopIncludingOneShots">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Enums.ElevatorState">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ElevatorState.IdleUp">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ElevatorState.IdleDown">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ElevatorState.GoingUp">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ElevatorState.GoingDown">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.ElevatorState.Deactivated">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Enums.RotationSource">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.RotationSource.Player">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.RotationSource.Launcher">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.RotationSource.Absolute">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Enums.WearablePosition">
            <summary>
            	TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.WearablePosition.Custom">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.WearablePosition.Head">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Enums.WearablePosition.Belt">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Extensions.ContentTagExtensions">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Extensions.ContentTagExtensions.CompareTag(LethalLevelLoader.ContentTag,LethalLevelLoader.ContentTag)">
            <summary>
                TODO.
            </summary>
            <param name="tagA"></param>
            <param name="tagB"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Extensions.PlayerExtensions">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Extensions.PlayerExtensions.IsLocalClient(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Extensions.PlayerExtensions.IsSpectatedClient(GameNetcodeStuff.PlayerControllerB)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Extensions.PlayerExtensions.HasLineOfSightToPosition(GameNetcodeStuff.PlayerControllerB,UnityEngine.Vector3,System.Single,System.Int32,System.Single,UnityEngine.LayerMask)">
            <summary>
                TODO.
            </summary>
            <param name="player"></param>
            <param name="pos"></param>
            <param name="width"></param>
            <param name="range"></param>
            <param name="proximityAwareness"></param>
            <param name="layerMask"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Extensions.SelectableLevelExtensions">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Extensions.SelectableLevelExtensions.GetNumberlessPlanetName(SelectableLevel)">
            <summary>
                TODO.
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Extensions.StringExtensions">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Extensions.StringExtensions.CompareOrdinal(System.String,System.String)">
            <summary>
                TODO.
            </summary>
            <param name="strA"></param>
            <param name="strB"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Extensions.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
                TODO.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Extensions.StringExtensions.IsNullOrWhiteSpace(System.String)">
            <summary>
                TODO.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Interfaces.IEventfulItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnActivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnActivatePhysicsTrigger">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnBatteryCharge">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnBatteryDrain">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnCollect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnCollectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnDestroyHeldEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnDiscardEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnDiscardSFX">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnDiscardSFXEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnEnemyGrab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnEnemyDiscard">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnEquip">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnEquipEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnGrab">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnGroundReached">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnGroundReachedVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnInspect">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnInspectEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnInteract">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnInteractLeft">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnInteractRight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnPlace">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.OnPocketEarly">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.FallWithCurveOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.HideOnPocket">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.SaveMaterialVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.SaveMeshVariant">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IEventfulItem.VariantIndex">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Interfaces.IEventfulItem.ResetCurveOverride">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Interfaces.IEventfulItem.ResetCurveOverride(EnemyAI)">
            <summary>
                TODO.
            </summary>
            <param name="enemy"></param>
        </member>
        <member name="T:itolib.Interfaces.IPooledObject`1">
            <summary>
                Adds object pooling capabilities to any implementing class, which also becomes its own <c>LinkedList</c> that holds all its instances.
                Contains some default implementations for assigning and freeing instances.
            </summary>
            <typeparam name="T">The type of the object taking ownership of this pooled object instance.</typeparam>
            <remarks>Not me only finding out <c>UnityEngine.Pool.IObjectPool</c> exists right after implementing this... 💀</remarks>
        </member>
        <member name="P:itolib.Interfaces.IPooledObject`1.ObjectID">
            <summary>
                Instance number for the current object in the pool. Intended for tracking and/or limiting the amount of created instances.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IPooledObject`1.TakenBy">
            <summary>
                External <c><typeparamref name="T"/></c> that has taken 'ownership' of this pooled object instance.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IPooledObject`1.NextPooledObject">
            <summary>
                Next pooled object instance in the <c>LinkedList</c>.
            </summary>
        </member>
        <member name="M:itolib.Interfaces.IPooledObject`1.CreateInstance">
            <summary>
                Instantiates a new pooled object instance.
            </summary>
            <remarks>Intended for doing any kind of extra initialization, or for setting additional properties.</remarks>
            <returns>The newly-created pooled object instance.</returns>
        </member>
        <member name="M:itolib.Interfaces.IPooledObject`1.TryAssignInstance(`0,System.Int32,itolib.Interfaces.IPooledObject{`0}@)">
            <summary>
                Attempt to assign a given <c><typeparamref name="T"/></c> to a new or existing pooled object instance.
            </summary>
            <param name="taker">External <c><typeparamref name="T"/></c> attempting to grab a pooled object instance.</param>
            <param name="maxInstances">Maximum number of pooled object instances that can be created.</param>
            <param name="pooledObject">The assigned pooled object instance, if successful.</param>
            <returns>Whether a pooled object instance was successfully assigned or not.</returns>
        </member>
        <member name="M:itolib.Interfaces.IPooledObject`1.TryFreeInstance(`0,itolib.Interfaces.IPooledObject{`0}@)">
            <summary>
                Check if a given <c><typeparamref name="T"/></c> is assigned to a pooled object instance, and free that instance to be reused.
            </summary>
            <param name="possibleOwner">External <c><typeparamref name="T"/></c> that might be assigned to a pooled object instance.</param>
            <param name="pooledObject">The now-freed pooled object instance, if successful.</param>
            <returns>Whether a pooled object instance was successfully freed or not.</returns>
        </member>
        <member name="M:itolib.Interfaces.IPooledObject`1.PrepareInstances(System.Int32)">
            <summary>
                Instantiates multiple instances of the pooled object, to have prepared.
            </summary>
            <param name="instancesLeft">The number of instances left to prepare.</param>
        </member>
        <member name="T:itolib.Interfaces.IScriptableConfigEntry`1">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:itolib.Interfaces.IScriptableConfigEntry`1.Section">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IScriptableConfigEntry`1.Key">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IScriptableConfigEntry`1.DefaultValue">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IScriptableConfigEntry`1.Description">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Interfaces.ISeededScript`1">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:itolib.Interfaces.ISeededScript`1.SeededRandom">
            <summary>
                Obtain (or create) a seeded Random instance using the current map seed.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.ISeededScript`1.CurrentSeed">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.ISeededScript`1.SeedOffset">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Interfaces.IWeightedEntry">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IWeightedEntry.Weight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IWeightedEntry.SingleUse">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Interfaces.IWeightedScript`1">
            <summary>
                TODO.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:itolib.Interfaces.IWeightedScript`1.WeightedEntries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IWeightedScript`1.CumulativeWeights">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Interfaces.IWeightedScript`1.TotalWeight">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Interfaces.IWeightedScript`1.Initialize">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.Interfaces.IWeightedScript`1.RemoveWeight(System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:itolib.Interfaces.IWeightedScript`1.ModifyWeight(System.Int32,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="index"></param>
            <param name="weight"></param>
        </member>
        <member name="M:itolib.Interfaces.IWeightedScript`1.TryObtainEntry(`0@,System.Int32)">
            <summary>
                TODO.
            </summary>
            <param name="entry"></param>
            <param name="weightIndex"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Interfaces.IWeightedScript`1.TryObtainRandomEntry(`0@,System.Random)">
            <summary>
                TODO.
            </summary>
            <param name="entry"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="M:itolib.Interfaces.IWeightedScript`1.TryObtainRandomEntryIndex(System.Int32@,System.Random)">
            <summary>
                TODO.
            </summary>
            <param name="weightIndex"></param>
            <param name="random"></param>
            <returns></returns>
        </member>
        <member name="T:itolib.Patches.LLLStoryLogPatch">
            <summary>
                Patch for re-adding ExtendedStoryLog instances to the Terminal upon lobby reload; should only run on LLL v1.4.11 or lower.
            </summary>
        </member>
        <member name="P:itolib.Patches.LLLStoryLogPatch.LLLStoryLogNodes">
            <summary>
                Cached list of TerminalNode instances corresponding to ExtendedStoryLog IDs.
            </summary>
        </member>
        <member name="T:itolib.Patches.LoadPatch">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.PlayZone.PlayZoneElevator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.PlayZone.PlayZoneElevator.CurrentState">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.elevatorAnimator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.doorAnimatorUpper">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.doorAnimatorLower">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.callElevatorUpper">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.callElevatorLower">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.openDoors">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.closeDoors">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.elevatorSource">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.doorSourceUpper">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.doorSourceLower">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.elevatorAudioTravel">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.elevatorAudioFinish">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.doorAudioOpen">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.doorAudioClose">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onElevatorTravelStart">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onElevatorTravelFinish">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onTopReached">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onBottomReached">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onDeactivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onDoorsOpen">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.PlayZoneElevator.onDoorsClose">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.SwitchState(itolib.Enums.ElevatorState)">
            <summary>
                TODO.
            </summary>
            <param name="newState"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.SwitchStateServerRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Enums.ElevatorState)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="newState"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.SwitchStateClientRpc(Unity.Netcode.NetworkBehaviourReference,itolib.Enums.ElevatorState)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="newState"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.SwitchStateLocal(itolib.Enums.ElevatorState)">
            <summary>
                TODO.
            </summary>
            <param name="newState"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.CallElevator(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="up"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.CallElevatorLocal(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="up"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.ToggleDoors(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="open"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.ToggleDoorsServerRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="open"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.ToggleDoorsClientRpc(Unity.Netcode.NetworkBehaviourReference,System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="playerReference"></param>
            <param name="open"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.ToggleDoorsLocal(System.Boolean)">
            <summary>
                TODO.
            </summary>
            <param name="open"></param>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.DeactivateElevator">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.PlayZone.PlayZoneElevator.OnDeactivate">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.PlayZone.TwinApparatus">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.PlayZone.TwinApparatus.LongLostTwin">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.PlayZone.TwinApparatus.bothPulled">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.PlayZone.TwinApparatus.HandleCompatibility">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.PlayZone.TwinApparatus.HandleDisconnect">
            <summary>
                TODO.
            </summary>
            <returns></returns>
        </member>
        <member name="M:itolib.PlayZone.TwinApparatus.EquipItem">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.PlayZone.TwinApparatus.AssignTwin(GrabbableObject)">
            <summary>
                TODO.
            </summary>
            <param name="possibleTwin"></param>
        </member>
        <member name="M:itolib.PlayZone.TwinApparatus.DimLights">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.Plugin">
            <summary>
                Wondrous gizmos and gadgets for the restless mind.
            </summary>
        </member>
        <member name="F:itolib.Plugin.PLUGIN_GUID">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Plugin.PLUGIN_NAME">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.Plugin.VERSION">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.Plugin.Harmony">
            <summary>
                Harmony instance for patching.
            </summary>
        </member>
        <member name="T:itolib.ScriptableObjects.BoolEntry">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.ScriptableObjects.BoolEntry.Section">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.ScriptableObjects.BoolEntry.Key">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.ScriptableObjects.BoolEntry.Description">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.ScriptableObjects.BoolEntry.DefaultValue">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.BoolEntry.#ctor">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="T:itolib.ScriptableObjects.ScriptableConfig">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="P:itolib.ScriptableObjects.ScriptableConfig.Config">
            <summary>
                Plugin configuration instance.
            </summary>
        </member>
        <member name="P:itolib.ScriptableObjects.ScriptableConfig.ConfigEntries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.ScriptableObjects.ScriptableConfig.authorName">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.ScriptableObjects.ScriptableConfig.modName">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="F:itolib.ScriptableObjects.ScriptableConfig.boolEntries">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.ScriptableConfig.Awake">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.ScriptableConfig.ClearOrphanedEntries(BepInEx.Configuration.ConfigFile)">
            <summary>
                Remove old (orphaned) configuration entries.
            </summary>
            <remarks>Obtained from: https://lethal.wiki/dev/intermediate/custom-configs#better-configuration</remarks>
            <param name="config">The config file to clear orphaned entries from.</param>
        </member>
        <member name="T:itolib.ScriptableObjects.ScriptableEvent">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="E:itolib.ScriptableObjects.ScriptableEvent.OnEventRaise">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.ScriptableEvent.RaiseEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.ScriptableEvent.AddListener(System.Action)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.ScriptableEvent.RemoveListener(System.Action)">
            <summary>
                TODO.
            </summary>
        </member>
        <member name="M:itolib.ScriptableObjects.ScriptableEvent.ClearListeners">
            <summary>
                TODO.
            </summary>
        </member>
    </members>
</doc>
